@page "/"

<PageTitle>Home</PageTitle>
<div class="container">
    <!-- Content here -->
    <h1 class="text-center ">Maze <i class="bi bi-dpad"></i> Game </h1>
    <h4 class="text-center ">[Recursive Backtracking]</h4>
    <hr />
    <EditForm Model="Dimentions" OnValidSubmit="GenerateMaze" OnInvalidSubmit="ResetMaze" FormName="Dimentions">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="d-flex justify-content-center mt-5">
            <div class="d-flex gap-2 justify-content-center w-75">
                <!--WIDTH-->
                <div class="input-group align-self-center w-auto">
                    <span class="input-group-text" id="basic-addon1"><i class="bi bi-arrows"></i></span>
                    <input type="number" @bind="@Dimentions.Width" class="form-control" placeholder="width" aria-label="width" aria-describedby="basic-addon1">
                </div>
                <!--HEIGHT-->
                <div class="input-group align-self-center w-auto">
                    <span class="input-group-text" id="basic-addon1"><i class="bi bi-arrows-vertical"></i></span>
                    <input type="number" @bind="@Dimentions.Height" class="form-control" placeholder="height" aria-label="height" aria-describedby="basic-addon1">
                </div>
                <button type="submit" class="btn btn-outline-success "> Test Recursive Backtracking</button>
                <button type="reset" class="btn btn-outline-warning " @onclick="ResetMaze"> Reset</button>
            </div>

        </div>


    </EditForm>
    <!--THE MAZE-->
    <hr class="mt-5" />

    @if (Maze is not null)
    {
        <div class="d-flex justify-content-center mt-5">
            <div class="card">
                <div class="card-body">

                    @for (int i = 0; i < Maze.GetLength(0); i++)
                    {
                        <div class="container text-center">
                            <div class="row">
                                @for (int j = 0; j < Maze.GetLength(1); j++)
                                {
                                    <div class="col @(Maze[i,j].Type == Models.MazeModel.CellType.Wall ? "bg-secondary":"bg-dark")">
                                        @(Maze[i,j].Type == Models.MazeModel.CellType.Wall ? "W":"*")
                                    </div>
                                }
                            </div>
                        </div>

                    }
                </div>
            </div>
        </div>
    }
    @if (IsLoopCompleted)
    {
        <hr class="mt-5" />

        <div class="d-flex justify-content-center">
            <div class="alert alert-success mt-5 w-25" role="alert">
                <h4 class="alert-heading text-center">Maze Generated!</h4>
            </div>
        </div>
    }

</div>

